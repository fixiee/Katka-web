---
import { Schema } from "astro-seo-schema";
import { getImage } from "astro:assets";
import { settings } from "../../../website";
import faviconSrc from "../../images/favicon.png";
import faviconSvgSrc from "../../images/favicon.svg";
import metaImageSrc from "../../images/meta-image.png";

export type Props = {
  title?: string;
  description?: string;
  image?: ImageMetadata;
  extraSchema?: any[];
};

const metaImage = await getImage({
  src: Astro.props.image ?? metaImageSrc,
});
const appleTouchIcon = await getImage({
  src: faviconSrc,
  width: 180,
  height: 180,
  format: "png",
});
const faviconSvg = await getImage({ src: faviconSvgSrc, format: "svg" });

const title = Astro.props.title ?? settings.title;
const description = Astro.props.description ?? settings.description;
const author = settings.author;
const copyrightStart = settings.copyrightStart;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(metaImage.src, Astro.url);
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <title>{title}</title>

  <meta name="title" content={title} />
  <meta name="description" content={description} />

  <meta name="copyright" content={`${author} ${copyrightStart} - ${new Date().getFullYear()}`} />
  <meta name="author" content={author} />

  <!-- Fonts removed - using only local Nunito Sans font -->

  <!-- Favicon -->
  <link rel="icon" href="/favicon.ico" sizes="32x32" />
  <link rel="icon" href={faviconSvg.src} type="image/svg+xml" />
  <link rel="apple-touch-icon" href={appleTouchIcon.src} />
  <link rel="manifest" href="/manifest.json" />

  <!-- Theme -->
  <meta name="msapplication-TileColor" content="#25928c" />
  <meta name="theme-color" content="#25928c" />

  <!-- Sitemap & Canonical -->
  <link rel="canonical" href={canonicalURL} data-baseprotocol="https:" />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <meta name="robots" content="index, follow" />

  <!-- Open Graph -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:site_name" content={title} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={socialImageURL} />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={socialImageURL} />

  <!-- Schema JSON -->
  <Schema
    item={{
      "@context": "https://schema.org",
      "@type": "LocalBusiness",
      name: settings.title,
      image: socialImageURL.toString(),
      "@id": settings.id,
      url: Astro.site?.toString() ?? "",
      telephone: "+420 777 232 109",
      address: {
        "@type": "PostalAddress",
        streetAddress: "TODO",
        addressLocality: "TODO",
        postalCode: "TODO",
        addressCountry: "CZ",
      },
      openingHoursSpecification: [
        {
          "@type": "OpeningHoursSpecification",
          dayOfWeek: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
          opens: "10:00",
          closes: "17:00",
        },
      ],
    }}
  />

  {Astro.props.extraSchema && Astro.props.extraSchema.map((schema) => <Schema item={schema} />)}

  <!-- Astro scripts -->
</head>
